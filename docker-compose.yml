# Docker Compose para DocN8NAgent
version: '3.8'

services:
  docn8n-agent:
    build: .
    container_name: docn8n-agent
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: docn8n-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL para producci√≥n (opcional)
  postgres:
    image: postgres:15-alpine
    container_name: docn8n-postgres
    environment:
      POSTGRES_DB: docn8n
      POSTGRES_USER: docn8n
      POSTGRES_PASSWORD: docn8n_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: docn8n-network
